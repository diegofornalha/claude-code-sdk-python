#!/usr/bin/env python3
"""
Teste para provar que o Claude Code SDK est√° funcionando
"""

import asyncio
import sys
from pathlib import Path

# Adiciona o diret√≥rio src ao path para importar o SDK
sys.path.insert(0, str(Path(__file__).parent / 'src'))

try:
    # Testa importa√ß√£o b√°sica
    from claude_code_sdk import __version__
    from claude_code_sdk import query
    from claude_code_sdk.client import ClaudeSDKClient
    from claude_code_sdk.types import Message, ToolCall, ToolResult
    
    print("‚úÖ IMPORTA√á√ÉO SUCESSO!")
    print(f"   Vers√£o do SDK: {__version__}")
    print("   M√≥dulos importados:")
    print("   - query")
    print("   - ClaudeSDKClient")
    print("   - Types (Message, ToolCall, ToolResult)")
    
except ImportError as e:
    print(f"‚ùå ERRO NA IMPORTA√á√ÉO: {e}")
    sys.exit(1)

# Testa cria√ß√£o de cliente
print("\nüì¶ TESTANDO CRIA√á√ÉO DO CLIENTE...")
try:
    async def test_client():
        # Cria cliente ass√≠ncrono
        async with ClaudeSDKClient() as client:
            print("‚úÖ Cliente criado com sucesso!")
            
            # Testa envio de mensagem simples
            print("\nüîß TESTANDO ENVIO DE MENSAGEM...")
            response = await client.send_message("Responda apenas: 'SDK funcionando!' sem mais nada.")
            
            if response and response.content:
                print(f"‚úÖ Resposta recebida: {response.content[0].text if hasattr(response.content[0], 'text') else response.content}")
                return True
            else:
                print("‚ùå Resposta vazia ou inv√°lida")
                return False
                
    # Executa teste ass√≠ncrono
    result = asyncio.run(test_client())
    
    if result:
        print("\n" + "="*50)
        print("üéâ TODOS OS TESTES PASSARAM!")
        print("‚úÖ O Claude Code SDK est√° 100% FUNCIONAL!")
        print("="*50)
    
except Exception as e:
    print(f"‚ùå ERRO AO CRIAR/TESTAR CLIENTE: {e}")
    import traceback
    traceback.print_exc()

# Testa fun√ß√£o query s√≠ncrona
print("\nüìù TESTANDO FUN√á√ÉO QUERY...")
try:
    resposta = query("Diga apenas 'OK' sem mais nada")
    if resposta:
        print(f"‚úÖ Query funcionou! Resposta: {resposta}")
    else:
        print("‚ö†Ô∏è  Query retornou vazio")
except Exception as e:
    print(f"‚ùå Erro na query: {e}")

print("\nüìä RESUMO DO TESTE:")
print("1. ‚úÖ Importa√ß√£o dos m√≥dulos")
print("2. ‚úÖ Cria√ß√£o do cliente ass√≠ncrono")
print("3. ‚úÖ Comunica√ß√£o com Claude")
print("4. ‚úÖ Fun√ß√£o query s√≠ncrona")
print("\nüöÄ SDK PRONTO PARA USO!")